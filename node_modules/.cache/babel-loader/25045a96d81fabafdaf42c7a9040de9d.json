{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\ngovantuan\\\\Desktop\\\\Demo\\\\Frontend\\\\NewsFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"C:\\\\Users\\\\ngovantuan\\\\Desktop\\\\Demo\\\\Frontend\\\\NewsFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unflatten = void 0;\n\nvar utils_js_1 = require(\"./utils.js\");\n\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : undefined;\n\nfunction unflatten(parsed) {\n  var hydrated = this.hydrated,\n      values = this.values;\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n  var startIndex = values.length;\n\n  var _iterator = _createForOfIteratorHelper(parsed),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n      values.push(value);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\n\nexports.unflatten = unflatten;\n\nfunction hydrate(index) {\n  var hydrated = this.hydrated,\n      values = this.values,\n      deferred = this.deferred,\n      plugins = this.plugins;\n  var result;\n  var stack = [[index, function (v) {\n    result = v;\n  }]];\n  var postRun = [];\n\n  var _loop = function _loop() {\n    var _stack$pop = stack.pop(),\n        _stack$pop2 = _slicedToArray(_stack$pop, 2),\n        index = _stack$pop2[0],\n        set = _stack$pop2[1];\n\n    switch (index) {\n      case utils_js_1.UNDEFINED:\n        set(undefined);\n        return \"continue\";\n\n      case utils_js_1.NULL:\n        set(null);\n        return \"continue\";\n\n      case utils_js_1.NAN:\n        set(NaN);\n        return \"continue\";\n\n      case utils_js_1.POSITIVE_INFINITY:\n        set(Infinity);\n        return \"continue\";\n\n      case utils_js_1.NEGATIVE_INFINITY:\n        set(-Infinity);\n        return \"continue\";\n\n      case utils_js_1.NEGATIVE_ZERO:\n        set(-0);\n        return \"continue\";\n    }\n\n    if (hydrated[index]) {\n      set(hydrated[index]);\n      return \"continue\";\n    }\n\n    var value = values[index];\n\n    if (!value || typeof value !== \"object\") {\n      hydrated[index] = value;\n      set(value);\n      return \"continue\";\n    }\n\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        var _value = _slicedToArray(value, 3),\n            type = _value[0],\n            b = _value[1],\n            c = _value[2];\n\n        var _ret2 = function () {\n          switch (type) {\n            case utils_js_1.TYPE_DATE:\n              set(hydrated[index] = new Date(b));\n              return {\n                v: \"continue\"\n              };\n\n            case utils_js_1.TYPE_URL:\n              set(hydrated[index] = new URL(b));\n              return {\n                v: \"continue\"\n              };\n\n            case utils_js_1.TYPE_BIGINT:\n              set(hydrated[index] = BigInt(b));\n              return {\n                v: \"continue\"\n              };\n\n            case utils_js_1.TYPE_REGEXP:\n              set(hydrated[index] = new RegExp(b, c));\n              return {\n                v: \"continue\"\n              };\n\n            case utils_js_1.TYPE_SYMBOL:\n              set(hydrated[index] = Symbol.for(b));\n              return {\n                v: \"continue\"\n              };\n\n            case utils_js_1.TYPE_SET:\n              var newSet = new Set();\n              hydrated[index] = newSet;\n\n              for (var i = 1; i < value.length; i++) {\n                stack.push([value[i], function (v) {\n                  newSet.add(v);\n                }]);\n              }\n\n              set(newSet);\n              return {\n                v: \"continue\"\n              };\n\n            case utils_js_1.TYPE_MAP:\n              var map = new Map();\n              hydrated[index] = map;\n\n              var _loop2 = function _loop2(_i) {\n                var r = [];\n                stack.push([value[_i + 1], function (v) {\n                  r[1] = v;\n                }]);\n                stack.push([value[_i], function (k) {\n                  r[0] = k;\n                }]);\n                postRun.push(function () {\n                  map.set(r[0], r[1]);\n                });\n              };\n\n              for (var _i = 1; _i < value.length; _i += 2) {\n                _loop2(_i);\n              }\n\n              set(map);\n              return {\n                v: \"continue\"\n              };\n\n            case utils_js_1.TYPE_NULL_OBJECT:\n              var obj = Object.create(null);\n              hydrated[index] = obj;\n\n              var _iterator2 = _createForOfIteratorHelper(Object.keys(b).reverse()),\n                  _step2;\n\n              try {\n                var _loop3 = function _loop3() {\n                  var key = _step2.value;\n                  var r = [];\n                  stack.push([b[key], function (v) {\n                    r[1] = v;\n                  }]);\n                  stack.push([Number(key.slice(1)), function (k) {\n                    r[0] = k;\n                  }]);\n                  postRun.push(function () {\n                    obj[r[0]] = r[1];\n                  });\n                };\n\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  _loop3();\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n\n              set(obj);\n              return {\n                v: \"continue\"\n              };\n\n            case utils_js_1.TYPE_PROMISE:\n              if (hydrated[b]) {\n                set(hydrated[index] = hydrated[b]);\n              } else {\n                var d = new utils_js_1.Deferred();\n                deferred[b] = d;\n                set(hydrated[index] = d.promise);\n              }\n\n              return {\n                v: \"continue\"\n              };\n\n            case utils_js_1.TYPE_ERROR:\n              var _value2 = _slicedToArray(value, 3),\n                  message = _value2[1],\n                  errorType = _value2[2];\n\n              var error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n              hydrated[index] = error;\n              set(error);\n              return {\n                v: \"continue\"\n              };\n\n            case utils_js_1.TYPE_PREVIOUS_RESOLVED:\n              set(hydrated[index] = hydrated[b]);\n              return {\n                v: \"continue\"\n              };\n\n            default:\n              // Run plugins at the end so we have a chance to resolve primitives\n              // without running into a loop\n              if (Array.isArray(plugins)) {\n                var _ret3 = function () {\n                  var r = [];\n                  var vals = value.slice(1);\n\n                  var _loop4 = function _loop4(_i2) {\n                    var v = vals[_i2];\n                    stack.push([v, function (v) {\n                      r[_i2] = v;\n                    }]);\n                  };\n\n                  for (var _i2 = 0; _i2 < vals.length; _i2++) {\n                    _loop4(_i2);\n                  }\n\n                  postRun.push(function () {\n                    var _iterator3 = _createForOfIteratorHelper(plugins),\n                        _step3;\n\n                    try {\n                      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                        var plugin = _step3.value;\n\n                        var _result = plugin.apply(void 0, [value[0]].concat(r));\n\n                        if (_result) {\n                          set(hydrated[index] = _result.value);\n                          return;\n                        }\n                      }\n                    } catch (err) {\n                      _iterator3.e(err);\n                    } finally {\n                      _iterator3.f();\n                    }\n\n                    throw new SyntaxError();\n                  });\n                  return {\n                    v: {\n                      v: \"continue\"\n                    }\n                  };\n                }();\n\n                if (typeof _ret3 === \"object\") return _ret3.v;\n              }\n\n              throw new SyntaxError();\n          }\n        }();\n\n        if (typeof _ret2 === \"object\") return _ret2.v;\n      } else {\n        var _ret4 = function () {\n          var array = [];\n          hydrated[index] = array;\n\n          var _loop5 = function _loop5(i) {\n            var n = value[i];\n\n            if (n !== utils_js_1.HOLE) {\n              stack.push([n, function (v) {\n                array[i] = v;\n              }]);\n            }\n          };\n\n          for (var i = 0; i < value.length; i++) {\n            _loop5(i);\n          }\n\n          set(array);\n          return {\n            v: \"continue\"\n          };\n        }();\n\n        if (typeof _ret4 === \"object\") return _ret4.v;\n      }\n    } else {\n      var _ret5 = function () {\n        var object = {};\n        hydrated[index] = object;\n\n        var _iterator4 = _createForOfIteratorHelper(Object.keys(value).reverse()),\n            _step4;\n\n        try {\n          var _loop6 = function _loop6() {\n            var key = _step4.value;\n            var r = [];\n            stack.push([value[key], function (v) {\n              r[1] = v;\n            }]);\n            stack.push([Number(key.slice(1)), function (k) {\n              r[0] = k;\n            }]);\n            postRun.push(function () {\n              object[r[0]] = r[1];\n            });\n          };\n\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            _loop6();\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        set(object);\n        return {\n          v: \"continue\"\n        };\n      }();\n\n      if (typeof _ret5 === \"object\") return _ret5.v;\n    }\n  };\n\n  while (stack.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/ngovantuan/Desktop/Demo/Frontend/NewsFrontEnd/node_modules/turbo-stream/dist/unflatten.js"],"names":["Object","defineProperty","exports","value","unflatten","utils_js_1","require","globalObj","window","globalThis","undefined","parsed","hydrated","values","hydrate","call","Array","isArray","length","SyntaxError","startIndex","push","index","deferred","plugins","result","stack","v","postRun","pop","set","UNDEFINED","NULL","NAN","NaN","POSITIVE_INFINITY","Infinity","NEGATIVE_INFINITY","NEGATIVE_ZERO","type","b","c","TYPE_DATE","Date","TYPE_URL","URL","TYPE_BIGINT","BigInt","TYPE_REGEXP","RegExp","TYPE_SYMBOL","Symbol","for","TYPE_SET","newSet","Set","i","add","TYPE_MAP","map","Map","r","k","TYPE_NULL_OBJECT","obj","create","keys","reverse","key","Number","slice","TYPE_PROMISE","d","Deferred","promise","TYPE_ERROR","message","errorType","error","Error","TYPE_PREVIOUS_RESOLVED","vals","plugin","array","n","HOLE","object"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unflatten = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nconst globalObj = (typeof window !== \"undefined\"\n    ? window\n    : typeof globalThis !== \"undefined\"\n        ? globalThis\n        : undefined);\nfunction unflatten(parsed) {\n    const { hydrated, values } = this;\n    if (typeof parsed === \"number\")\n        return hydrate.call(this, parsed);\n    if (!Array.isArray(parsed) || !parsed.length)\n        throw new SyntaxError();\n    const startIndex = values.length;\n    for (const value of parsed) {\n        values.push(value);\n    }\n    hydrated.length = values.length;\n    return hydrate.call(this, startIndex);\n}\nexports.unflatten = unflatten;\nfunction hydrate(index) {\n    const { hydrated, values, deferred, plugins } = this;\n    let result;\n    const stack = [\n        [\n            index,\n            (v) => {\n                result = v;\n            },\n        ],\n    ];\n    let postRun = [];\n    while (stack.length > 0) {\n        const [index, set] = stack.pop();\n        switch (index) {\n            case utils_js_1.UNDEFINED:\n                set(undefined);\n                continue;\n            case utils_js_1.NULL:\n                set(null);\n                continue;\n            case utils_js_1.NAN:\n                set(NaN);\n                continue;\n            case utils_js_1.POSITIVE_INFINITY:\n                set(Infinity);\n                continue;\n            case utils_js_1.NEGATIVE_INFINITY:\n                set(-Infinity);\n                continue;\n            case utils_js_1.NEGATIVE_ZERO:\n                set(-0);\n                continue;\n        }\n        if (hydrated[index]) {\n            set(hydrated[index]);\n            continue;\n        }\n        const value = values[index];\n        if (!value || typeof value !== \"object\") {\n            hydrated[index] = value;\n            set(value);\n            continue;\n        }\n        if (Array.isArray(value)) {\n            if (typeof value[0] === \"string\") {\n                const [type, b, c] = value;\n                switch (type) {\n                    case utils_js_1.TYPE_DATE:\n                        set((hydrated[index] = new Date(b)));\n                        continue;\n                    case utils_js_1.TYPE_URL:\n                        set((hydrated[index] = new URL(b)));\n                        continue;\n                    case utils_js_1.TYPE_BIGINT:\n                        set((hydrated[index] = BigInt(b)));\n                        continue;\n                    case utils_js_1.TYPE_REGEXP:\n                        set((hydrated[index] = new RegExp(b, c)));\n                        continue;\n                    case utils_js_1.TYPE_SYMBOL:\n                        set((hydrated[index] = Symbol.for(b)));\n                        continue;\n                    case utils_js_1.TYPE_SET:\n                        const newSet = new Set();\n                        hydrated[index] = newSet;\n                        for (let i = 1; i < value.length; i++)\n                            stack.push([\n                                value[i],\n                                (v) => {\n                                    newSet.add(v);\n                                },\n                            ]);\n                        set(newSet);\n                        continue;\n                    case utils_js_1.TYPE_MAP:\n                        const map = new Map();\n                        hydrated[index] = map;\n                        for (let i = 1; i < value.length; i += 2) {\n                            const r = [];\n                            stack.push([\n                                value[i + 1],\n                                (v) => {\n                                    r[1] = v;\n                                },\n                            ]);\n                            stack.push([\n                                value[i],\n                                (k) => {\n                                    r[0] = k;\n                                },\n                            ]);\n                            postRun.push(() => {\n                                map.set(r[0], r[1]);\n                            });\n                        }\n                        set(map);\n                        continue;\n                    case utils_js_1.TYPE_NULL_OBJECT:\n                        const obj = Object.create(null);\n                        hydrated[index] = obj;\n                        for (const key of Object.keys(b).reverse()) {\n                            const r = [];\n                            stack.push([\n                                b[key],\n                                (v) => {\n                                    r[1] = v;\n                                },\n                            ]);\n                            stack.push([\n                                Number(key.slice(1)),\n                                (k) => {\n                                    r[0] = k;\n                                },\n                            ]);\n                            postRun.push(() => {\n                                obj[r[0]] = r[1];\n                            });\n                        }\n                        set(obj);\n                        continue;\n                    case utils_js_1.TYPE_PROMISE:\n                        if (hydrated[b]) {\n                            set((hydrated[index] = hydrated[b]));\n                        }\n                        else {\n                            const d = new utils_js_1.Deferred();\n                            deferred[b] = d;\n                            set((hydrated[index] = d.promise));\n                        }\n                        continue;\n                    case utils_js_1.TYPE_ERROR:\n                        const [, message, errorType] = value;\n                        let error = errorType && globalObj && globalObj[errorType]\n                            ? new globalObj[errorType](message)\n                            : new Error(message);\n                        hydrated[index] = error;\n                        set(error);\n                        continue;\n                    case utils_js_1.TYPE_PREVIOUS_RESOLVED:\n                        set((hydrated[index] = hydrated[b]));\n                        continue;\n                    default:\n                        // Run plugins at the end so we have a chance to resolve primitives\n                        // without running into a loop\n                        if (Array.isArray(plugins)) {\n                            const r = [];\n                            const vals = value.slice(1);\n                            for (let i = 0; i < vals.length; i++) {\n                                const v = vals[i];\n                                stack.push([\n                                    v,\n                                    (v) => {\n                                        r[i] = v;\n                                    },\n                                ]);\n                            }\n                            postRun.push(() => {\n                                for (const plugin of plugins) {\n                                    const result = plugin(value[0], ...r);\n                                    if (result) {\n                                        set((hydrated[index] = result.value));\n                                        return;\n                                    }\n                                }\n                                throw new SyntaxError();\n                            });\n                            continue;\n                        }\n                        throw new SyntaxError();\n                }\n            }\n            else {\n                const array = [];\n                hydrated[index] = array;\n                for (let i = 0; i < value.length; i++) {\n                    const n = value[i];\n                    if (n !== utils_js_1.HOLE) {\n                        stack.push([\n                            n,\n                            (v) => {\n                                array[i] = v;\n                            },\n                        ]);\n                    }\n                }\n                set(array);\n                continue;\n            }\n        }\n        else {\n            const object = {};\n            hydrated[index] = object;\n            for (const key of Object.keys(value).reverse()) {\n                const r = [];\n                stack.push([\n                    value[key],\n                    (v) => {\n                        r[1] = v;\n                    },\n                ]);\n                stack.push([\n                    Number(key.slice(1)),\n                    (k) => {\n                        r[0] = k;\n                    },\n                ]);\n                postRun.push(() => {\n                    object[r[0]] = r[1];\n                });\n            }\n            set(object);\n            continue;\n        }\n    }\n    while (postRun.length > 0) {\n        postRun.pop()();\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"script"}