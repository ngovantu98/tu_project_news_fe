{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\ngovantuan\\\\Desktop\\\\Demo\\\\Frontend\\\\NewsFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\ngovantuan\\\\Desktop\\\\Demo\\\\Frontend\\\\NewsFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\ngovantuan\\\\Desktop\\\\Demo\\\\Frontend\\\\NewsFrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encode = exports.decode = void 0;\n\nvar flatten_js_1 = require(\"./flatten.js\");\n\nvar unflatten_js_1 = require(\"./unflatten.js\");\n\nvar utils_js_1 = require(\"./utils.js\");\n\nfunction decode(_x, _x2) {\n  return _decode.apply(this, arguments);\n}\n\nfunction _decode() {\n  _decode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(readable, options) {\n    var _ref2, plugins, done, reader, decoder, decoded, donePromise;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref2 = options !== null && options !== void 0 ? options : {}, plugins = _ref2.plugins;\n            done = new utils_js_1.Deferred();\n            reader = readable.pipeThrough((0, utils_js_1.createLineSplittingTransform)()).getReader();\n            decoder = {\n              values: [],\n              hydrated: [],\n              deferred: {},\n              plugins: plugins\n            };\n            _context2.next = 6;\n            return decodeInitial.call(decoder, reader);\n\n          case 6:\n            decoded = _context2.sent;\n            donePromise = done.promise;\n\n            if (decoded.done) {\n              done.resolve();\n            } else {\n              donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch(function (reason) {\n                for (var _i2 = 0, _Object$values = Object.values(decoder.deferred); _i2 < _Object$values.length; _i2++) {\n                  var deferred = _Object$values[_i2];\n                  deferred.reject(reason);\n                }\n\n                done.reject(reason);\n              });\n            }\n\n            return _context2.abrupt(\"return\", {\n              done: donePromise.then(function () {\n                return reader.closed;\n              }),\n              value: decoded.value\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _decode.apply(this, arguments);\n}\n\nexports.decode = decode;\n\nfunction decodeInitial(_x3) {\n  return _decodeInitial.apply(this, arguments);\n}\n\nfunction _decodeInitial() {\n  _decodeInitial = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(reader) {\n    var read, line;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return reader.read();\n\n          case 2:\n            read = _context3.sent;\n\n            if (read.value) {\n              _context3.next = 5;\n              break;\n            }\n\n            throw new SyntaxError();\n\n          case 5:\n            _context3.prev = 5;\n            line = JSON.parse(read.value);\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](5);\n            throw new SyntaxError();\n\n          case 12:\n            return _context3.abrupt(\"return\", {\n              done: read.done,\n              value: unflatten_js_1.unflatten.call(this, line)\n            });\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this, [[5, 9]]);\n  }));\n  return _decodeInitial.apply(this, arguments);\n}\n\nfunction decodeDeferred(_x4) {\n  return _decodeDeferred.apply(this, arguments);\n}\n\nfunction _decodeDeferred() {\n  _decodeDeferred = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(reader) {\n    var read, line, colonIndex, deferredId, deferred, lineData, jsonLine, value, _colonIndex, _deferredId, _deferred, _lineData, _jsonLine, _value;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return reader.read();\n\n          case 2:\n            read = _context4.sent;\n\n          case 3:\n            if (read.done) {\n              _context4.next = 50;\n              break;\n            }\n\n            if (read.value) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"continue\", 3);\n\n          case 6:\n            line = read.value;\n            _context4.t0 = line[0];\n            _context4.next = _context4.t0 === utils_js_1.TYPE_PROMISE ? 10 : _context4.t0 === utils_js_1.TYPE_ERROR ? 27 : 44;\n            break;\n\n          case 10:\n            colonIndex = line.indexOf(\":\");\n            deferredId = Number(line.slice(1, colonIndex));\n            deferred = this.deferred[deferredId];\n\n            if (deferred) {\n              _context4.next = 15;\n              break;\n            }\n\n            throw new Error(\"Deferred ID \".concat(deferredId, \" not found in stream\"));\n\n          case 15:\n            lineData = line.slice(colonIndex + 1);\n            jsonLine = void 0;\n            _context4.prev = 17;\n            jsonLine = JSON.parse(lineData);\n            _context4.next = 24;\n            break;\n\n          case 21:\n            _context4.prev = 21;\n            _context4.t1 = _context4[\"catch\"](17);\n            throw new SyntaxError();\n\n          case 24:\n            value = unflatten_js_1.unflatten.call(this, jsonLine);\n            deferred.resolve(value);\n            return _context4.abrupt(\"break\", 45);\n\n          case 27:\n            _colonIndex = line.indexOf(\":\");\n            _deferredId = Number(line.slice(1, _colonIndex));\n            _deferred = this.deferred[_deferredId];\n\n            if (_deferred) {\n              _context4.next = 32;\n              break;\n            }\n\n            throw new Error(\"Deferred ID \".concat(_deferredId, \" not found in stream\"));\n\n          case 32:\n            _lineData = line.slice(_colonIndex + 1);\n            _jsonLine = void 0;\n            _context4.prev = 34;\n            _jsonLine = JSON.parse(_lineData);\n            _context4.next = 41;\n            break;\n\n          case 38:\n            _context4.prev = 38;\n            _context4.t2 = _context4[\"catch\"](34);\n            throw new SyntaxError();\n\n          case 41:\n            _value = unflatten_js_1.unflatten.call(this, _jsonLine);\n\n            _deferred.reject(_value);\n\n            return _context4.abrupt(\"break\", 45);\n\n          case 44:\n            throw new SyntaxError();\n\n          case 45:\n            _context4.next = 47;\n            return reader.read();\n\n          case 47:\n            read = _context4.sent;\n            _context4.next = 3;\n            break;\n\n          case 50:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this, [[17, 21], [34, 38]]);\n  }));\n  return _decodeDeferred.apply(this, arguments);\n}\n\nfunction encode(input, options) {\n  var _ref = options !== null && options !== void 0 ? options : {},\n      plugins = _ref.plugins,\n      postPlugins = _ref.postPlugins,\n      signal = _ref.signal;\n\n  var encoder = {\n    deferred: {},\n    index: 0,\n    indices: new Map(),\n    stringified: [],\n    plugins: plugins,\n    postPlugins: postPlugins,\n    signal: signal\n  };\n  var textEncoder = new TextEncoder();\n  var lastSentIndex = 0;\n  var readable = new ReadableStream({\n    start: function start(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var id, seenPromises, _loop, _i, _Object$entries, _ret;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = flatten_js_1.flatten.call(encoder, input);\n\n                if (!Array.isArray(id)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                throw new Error(\"This should never happen\");\n\n              case 3:\n                if (id < 0) {\n                  controller.enqueue(textEncoder.encode(\"\".concat(id, \"\\n\")));\n                } else {\n                  controller.enqueue(textEncoder.encode(\"[\".concat(encoder.stringified.join(\",\"), \"]\\n\")));\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n\n                seenPromises = new WeakSet();\n\n              case 5:\n                if (!(Object.keys(encoder.deferred).length > 0)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _loop = function _loop() {\n                  var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n                      deferredId = _Object$entries$_i[0],\n                      deferred = _Object$entries$_i[1];\n\n                  if (seenPromises.has(deferred)) return \"continue\";\n                  seenPromises.add(encoder.deferred[Number(deferredId)] = raceSignal(deferred, encoder.signal).then(function (resolved) {\n                    var id = flatten_js_1.flatten.call(encoder, resolved);\n\n                    if (Array.isArray(id)) {\n                      controller.enqueue(textEncoder.encode(\"\".concat(utils_js_1.TYPE_PROMISE).concat(deferredId, \":[[\\\"\").concat(utils_js_1.TYPE_PREVIOUS_RESOLVED, \"\\\",\").concat(id[0], \"]]\\n\")));\n                      encoder.index++;\n                      lastSentIndex++;\n                    } else if (id < 0) {\n                      controller.enqueue(textEncoder.encode(\"\".concat(utils_js_1.TYPE_PROMISE).concat(deferredId, \":\").concat(id, \"\\n\")));\n                    } else {\n                      var values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                      controller.enqueue(textEncoder.encode(\"\".concat(utils_js_1.TYPE_PROMISE).concat(deferredId, \":[\").concat(values, \"]\\n\")));\n                      lastSentIndex = encoder.stringified.length - 1;\n                    }\n                  }, function (reason) {\n                    if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                      reason = new Error(\"An unknown error occurred\");\n                    }\n\n                    var id = flatten_js_1.flatten.call(encoder, reason);\n\n                    if (Array.isArray(id)) {\n                      controller.enqueue(textEncoder.encode(\"\".concat(utils_js_1.TYPE_ERROR).concat(deferredId, \":[[\\\"\").concat(utils_js_1.TYPE_PREVIOUS_RESOLVED, \"\\\",\").concat(id[0], \"]]\\n\")));\n                      encoder.index++;\n                      lastSentIndex++;\n                    } else if (id < 0) {\n                      controller.enqueue(textEncoder.encode(\"\".concat(utils_js_1.TYPE_ERROR).concat(deferredId, \":\").concat(id, \"\\n\")));\n                    } else {\n                      var values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                      controller.enqueue(textEncoder.encode(\"\".concat(utils_js_1.TYPE_ERROR).concat(deferredId, \":[\").concat(values, \"]\\n\")));\n                      lastSentIndex = encoder.stringified.length - 1;\n                    }\n                  }).finally(function () {\n                    delete encoder.deferred[Number(deferredId)];\n                  }));\n                };\n\n                _i = 0, _Object$entries = Object.entries(encoder.deferred);\n\n              case 8:\n                if (!(_i < _Object$entries.length)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _ret = _loop();\n\n                if (!(_ret === \"continue\")) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 12);\n\n              case 12:\n                _i++;\n                _context.next = 8;\n                break;\n\n              case 15:\n                _context.next = 17;\n                return Promise.race(Object.values(encoder.deferred));\n\n              case 17:\n                _context.next = 5;\n                break;\n\n              case 19:\n                _context.next = 21;\n                return Promise.all(Object.values(encoder.deferred));\n\n              case 21:\n                controller.close();\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  });\n  return readable;\n}\n\nexports.encode = encode;\n\nfunction raceSignal(promise, signal) {\n  if (!signal) return promise;\n  if (signal.aborted) return Promise.reject(signal.reason || new Error(\"Signal was aborted.\"));\n  var abort = new Promise(function (resolve, reject) {\n    signal.addEventListener(\"abort\", function (event) {\n      reject(signal.reason || new Error(\"Signal was aborted.\"));\n    });\n    promise.then(resolve).catch(reject);\n  });\n  abort.catch(function () {});\n  return Promise.race([abort, promise]);\n}","map":{"version":3,"sources":["C:/Users/ngovantuan/Desktop/Demo/Frontend/NewsFrontEnd/node_modules/turbo-stream/dist/turbo-stream.js"],"names":["Object","defineProperty","exports","value","encode","decode","flatten_js_1","require","unflatten_js_1","utils_js_1","readable","options","plugins","done","Deferred","reader","pipeThrough","createLineSplittingTransform","getReader","decoder","values","hydrated","deferred","decodeInitial","call","decoded","donePromise","promise","resolve","decodeDeferred","then","catch","reason","reject","closed","read","SyntaxError","line","JSON","parse","unflatten","TYPE_PROMISE","TYPE_ERROR","colonIndex","indexOf","deferredId","Number","slice","Error","lineData","jsonLine","input","postPlugins","signal","encoder","index","indices","Map","stringified","textEncoder","TextEncoder","lastSentIndex","ReadableStream","start","controller","id","flatten","Array","isArray","enqueue","join","length","seenPromises","WeakSet","keys","has","add","raceSignal","resolved","TYPE_PREVIOUS_RESOLVED","finally","entries","Promise","race","all","close","aborted","abort","addEventListener","event"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encode = exports.decode = void 0;\nconst flatten_js_1 = require(\"./flatten.js\");\nconst unflatten_js_1 = require(\"./unflatten.js\");\nconst utils_js_1 = require(\"./utils.js\");\nasync function decode(readable, options) {\n    const { plugins } = options ?? {};\n    const done = new utils_js_1.Deferred();\n    const reader = readable\n        .pipeThrough((0, utils_js_1.createLineSplittingTransform)())\n        .getReader();\n    const decoder = {\n        values: [],\n        hydrated: [],\n        deferred: {},\n        plugins,\n    };\n    const decoded = await decodeInitial.call(decoder, reader);\n    let donePromise = done.promise;\n    if (decoded.done) {\n        done.resolve();\n    }\n    else {\n        donePromise = decodeDeferred\n            .call(decoder, reader)\n            .then(done.resolve)\n            .catch((reason) => {\n            for (const deferred of Object.values(decoder.deferred)) {\n                deferred.reject(reason);\n            }\n            done.reject(reason);\n        });\n    }\n    return {\n        done: donePromise.then(() => reader.closed),\n        value: decoded.value,\n    };\n}\nexports.decode = decode;\nasync function decodeInitial(reader) {\n    const read = await reader.read();\n    if (!read.value) {\n        throw new SyntaxError();\n    }\n    let line;\n    try {\n        line = JSON.parse(read.value);\n    }\n    catch (reason) {\n        throw new SyntaxError();\n    }\n    return {\n        done: read.done,\n        value: unflatten_js_1.unflatten.call(this, line),\n    };\n}\nasync function decodeDeferred(reader) {\n    let read = await reader.read();\n    while (!read.done) {\n        if (!read.value)\n            continue;\n        const line = read.value;\n        switch (line[0]) {\n            case utils_js_1.TYPE_PROMISE: {\n                const colonIndex = line.indexOf(\":\");\n                const deferredId = Number(line.slice(1, colonIndex));\n                const deferred = this.deferred[deferredId];\n                if (!deferred) {\n                    throw new Error(`Deferred ID ${deferredId} not found in stream`);\n                }\n                const lineData = line.slice(colonIndex + 1);\n                let jsonLine;\n                try {\n                    jsonLine = JSON.parse(lineData);\n                }\n                catch (reason) {\n                    throw new SyntaxError();\n                }\n                const value = unflatten_js_1.unflatten.call(this, jsonLine);\n                deferred.resolve(value);\n                break;\n            }\n            case utils_js_1.TYPE_ERROR: {\n                const colonIndex = line.indexOf(\":\");\n                const deferredId = Number(line.slice(1, colonIndex));\n                const deferred = this.deferred[deferredId];\n                if (!deferred) {\n                    throw new Error(`Deferred ID ${deferredId} not found in stream`);\n                }\n                const lineData = line.slice(colonIndex + 1);\n                let jsonLine;\n                try {\n                    jsonLine = JSON.parse(lineData);\n                }\n                catch (reason) {\n                    throw new SyntaxError();\n                }\n                const value = unflatten_js_1.unflatten.call(this, jsonLine);\n                deferred.reject(value);\n                break;\n            }\n            default:\n                throw new SyntaxError();\n        }\n        read = await reader.read();\n    }\n}\nfunction encode(input, options) {\n    const { plugins, postPlugins, signal } = options ?? {};\n    const encoder = {\n        deferred: {},\n        index: 0,\n        indices: new Map(),\n        stringified: [],\n        plugins,\n        postPlugins,\n        signal,\n    };\n    const textEncoder = new TextEncoder();\n    let lastSentIndex = 0;\n    const readable = new ReadableStream({\n        async start(controller) {\n            const id = flatten_js_1.flatten.call(encoder, input);\n            if (Array.isArray(id)) {\n                throw new Error(\"This should never happen\");\n            }\n            if (id < 0) {\n                controller.enqueue(textEncoder.encode(`${id}\\n`));\n            }\n            else {\n                controller.enqueue(textEncoder.encode(`[${encoder.stringified.join(\",\")}]\\n`));\n                lastSentIndex = encoder.stringified.length - 1;\n            }\n            const seenPromises = new WeakSet();\n            while (Object.keys(encoder.deferred).length > 0) {\n                for (const [deferredId, deferred] of Object.entries(encoder.deferred)) {\n                    if (seenPromises.has(deferred))\n                        continue;\n                    seenPromises.add((encoder.deferred[Number(deferredId)] = raceSignal(deferred, encoder.signal)\n                        .then((resolved) => {\n                        const id = flatten_js_1.flatten.call(encoder, resolved);\n                        if (Array.isArray(id)) {\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:[[\"${utils_js_1.TYPE_PREVIOUS_RESOLVED}\",${id[0]}]]\\n`));\n                            encoder.index++;\n                            lastSentIndex++;\n                        }\n                        else if (id < 0) {\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:${id}\\n`));\n                        }\n                        else {\n                            const values = encoder.stringified\n                                .slice(lastSentIndex + 1)\n                                .join(\",\");\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_PROMISE}${deferredId}:[${values}]\\n`));\n                            lastSentIndex = encoder.stringified.length - 1;\n                        }\n                    }, (reason) => {\n                        if (!reason ||\n                            typeof reason !== \"object\" ||\n                            !(reason instanceof Error)) {\n                            reason = new Error(\"An unknown error occurred\");\n                        }\n                        const id = flatten_js_1.flatten.call(encoder, reason);\n                        if (Array.isArray(id)) {\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:[[\"${utils_js_1.TYPE_PREVIOUS_RESOLVED}\",${id[0]}]]\\n`));\n                            encoder.index++;\n                            lastSentIndex++;\n                        }\n                        else if (id < 0) {\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:${id}\\n`));\n                        }\n                        else {\n                            const values = encoder.stringified\n                                .slice(lastSentIndex + 1)\n                                .join(\",\");\n                            controller.enqueue(textEncoder.encode(`${utils_js_1.TYPE_ERROR}${deferredId}:[${values}]\\n`));\n                            lastSentIndex = encoder.stringified.length - 1;\n                        }\n                    })\n                        .finally(() => {\n                        delete encoder.deferred[Number(deferredId)];\n                    })));\n                }\n                await Promise.race(Object.values(encoder.deferred));\n            }\n            await Promise.all(Object.values(encoder.deferred));\n            controller.close();\n        },\n    });\n    return readable;\n}\nexports.encode = encode;\nfunction raceSignal(promise, signal) {\n    if (!signal)\n        return promise;\n    if (signal.aborted)\n        return Promise.reject(signal.reason || new Error(\"Signal was aborted.\"));\n    const abort = new Promise((resolve, reject) => {\n        signal.addEventListener(\"abort\", (event) => {\n            reject(signal.reason || new Error(\"Signal was aborted.\"));\n        });\n        promise.then(resolve).catch(reject);\n    });\n    abort.catch(() => { });\n    return Promise.race([abort, promise]);\n}\n"]},"metadata":{},"sourceType":"script"}